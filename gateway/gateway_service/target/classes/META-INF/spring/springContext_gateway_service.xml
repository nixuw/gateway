<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
   	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
   	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">
   	
   	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxActive}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWait}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<bean class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" />


      <bean id="alipayService" class="com.pay.third.alipay.AlipayService"/>
      <bean id="unionpayService" class="com.pay.third.unionpay.UnionpayService">
        <property name="transTimeout" value="${unionpay.trans.timeout}"/>
         <property name="merchantNameInUnionpay" value="${unionpay.merchant.name.inunionpay}"/>
      </bean>
      
      <bean id="thirdPayServiceFactory" class="com.pay.third.ThirdPayServiceFactory">
        <property name="thirdPays">
           <map>
              <entry key="${alipay.channel.id}" value-ref="alipayService"/>
               <entry key="${unionpay.channel.id}" value-ref="unionpayService"/>
           </map>
        
        </property>
      
      </bean>
      
      <bean id="alipayLogService" class="com.pay.third.alipay.AlipayLogServiceImpl" >
         <property name="channelId" value="${alipay.channel.id}"/>
      </bean>
      
      <bean id="unionpayLogService" class="com.pay.third.unionpay.UnionpayLogServiceImpl" >
         <property name="channelId" value="${unionpay.channel.id}"/>
      </bean>
      
      	<bean id="httpClient" class="com.pay.httpclient.SimpleOCCHttpClient" destroy-method="close">
		<constructor-arg>
	         <bean class="com.pay.httpclient.config.HttpClientConfig"/>
	    </constructor-arg>
	</bean>
	
	 <bean id="alipayVerifyService" class="com.pay.third.alipay.AlipayVerifyService" >
         <property name="channelId" value="${alipay.channel.id}"/>
         <property name="isVerify" value="${alipay.verfiy.notifyid}"/>
         
          <property name="verifyUrl" value="${alipay.verfiy.url}"/>
         
      </bean>
	
</beans>